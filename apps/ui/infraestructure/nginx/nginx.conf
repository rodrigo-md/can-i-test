upstream nginx {
    server 127.0.0.1:8080;
}

server {
        listen 8080;
        listen [::]:8080;

        server_name localhost;

        location / {
           root /usr/share/nginx/html;
           index index.html index.htm;
           try_files $uri $uri/ /index.html =404;
    }
}

server {
    server_tokens off;
    listen 80;
    server_name app.canihelp.rodrigomd.dev;

    location / {
        return 301 https://app.canihelp.rodrigomd.dev$request_uri;
    }

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/certbot;
    }

    location = /.well-known/acme-challenge/ {
        return 404;
    }
}

server {

    listen 443 ssl;
    server_name app.canihelp.rodrigomd.dev;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/app.canihelp.rodrigomd.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/app.canihelp.rodrigomd.dev/privkey.pem;

    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl_dhparams.pem;

    location / {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_pass http://nginx;
    }

    # acme challenge
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/certbot;
    }

    location = /.well-known/acme-challenge/ {
        return 404;
    }
}
